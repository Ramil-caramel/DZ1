#include "Header.h"
#include <string>

std::string Error_Check(std::string input) {
	/*
	неправильное расположение скобок
	не все скобки закрыты
	запятая ,только точки
	недопустимый знак, ошибка в функциях или есть пробел
	дейсвие без всех аргументов к примеру (8+)
	действие подряд
	отсутствие скобки после функции

	() функция или выражение от пустых аргументов
	*/

	int ch_scob = 0;
	bool a, b;
	std::string alf = "0123456789!@#$%.()+-*/",zn = "+-*/", fn="!@#$%";
	input += 'q'; //так как мы идем в некоторых местах i+1 и при этом считываем все скобки одна из которых в конце, добавим лишний символ

	for (int i = 0; i < input.size() - 1; ++i) {
		if (input[i] == '(') {
			ch_scob += 1;
		}

		if (input[i] == ')') {
			ch_scob -= 1;
		}

		if (ch_scob < 0){
			return "неправильное расположение скобок";
		}

		if (input[i] == ',') {
			return "использованна запятая, пожалуйста используйте только точки";
		}
		
		if (std::isspace(input[i])) {
			return "уберите пробелы, пожалуйста";
		}

		if (!in(input[i], alf)) {
			return "недопустимый знак, ошибка в названии функции";
		}

		a = in(input[i], zn);
		b = in(input[i + 1], zn);

		if ((input[i] == '(' and b) or (input[i+1] == ')' and a)) {
			return "дейсвие без некоторых аргументов к примеру (8+) или вы ввели пробел(уберите его пожалуйста)";
		}
		if (a and b) {
			return "знаковые действие идут подряд";
		}
		if (in(input[i], fn) and input[i + 1] != '(') {
			return "отсутствие скобки после функции";
		}
		if (input[i] == '(' and input[i + 1] == ')') {
			return "функция или выражение от пустых аргументов";
		}
	}

	if (ch_scob > 0) {
		return "не все скобки закрыты";
	}
	
	return "0";

}
